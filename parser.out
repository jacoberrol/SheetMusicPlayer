Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> song
Rule 1     song -> song note
Rule 2     song -> note
Rule 3     note -> FRACTIONAL_DURATION PITCH OCTAVE
Rule 4     note -> WHOLE_DURATION PITCH OCTAVE

Terminals, with rules where they appear

FRACTIONAL_DURATION  : 3
OCTAVE               : 3 4
PITCH                : 3 4
WHOLE_DURATION       : 4
error                : 

Nonterminals, with rules where they appear

note                 : 1 2
song                 : 1 0

Parsing method: LALR

state 0

    (0) S' -> . song
    (1) song -> . song note
    (2) song -> . note
    (3) note -> . FRACTIONAL_DURATION PITCH OCTAVE
    (4) note -> . WHOLE_DURATION PITCH OCTAVE

    FRACTIONAL_DURATION shift and go to state 3
    WHOLE_DURATION  shift and go to state 4

    song                           shift and go to state 1
    note                           shift and go to state 2

state 1

    (0) S' -> song .
    (1) song -> song . note
    (3) note -> . FRACTIONAL_DURATION PITCH OCTAVE
    (4) note -> . WHOLE_DURATION PITCH OCTAVE

    FRACTIONAL_DURATION shift and go to state 3
    WHOLE_DURATION  shift and go to state 4

    note                           shift and go to state 5

state 2

    (2) song -> note .

    FRACTIONAL_DURATION reduce using rule 2 (song -> note .)
    WHOLE_DURATION  reduce using rule 2 (song -> note .)
    $end            reduce using rule 2 (song -> note .)


state 3

    (3) note -> FRACTIONAL_DURATION . PITCH OCTAVE

    PITCH           shift and go to state 6


state 4

    (4) note -> WHOLE_DURATION . PITCH OCTAVE

    PITCH           shift and go to state 7


state 5

    (1) song -> song note .

    FRACTIONAL_DURATION reduce using rule 1 (song -> song note .)
    WHOLE_DURATION  reduce using rule 1 (song -> song note .)
    $end            reduce using rule 1 (song -> song note .)


state 6

    (3) note -> FRACTIONAL_DURATION PITCH . OCTAVE

    OCTAVE          shift and go to state 8


state 7

    (4) note -> WHOLE_DURATION PITCH . OCTAVE

    OCTAVE          shift and go to state 9


state 8

    (3) note -> FRACTIONAL_DURATION PITCH OCTAVE .

    FRACTIONAL_DURATION reduce using rule 3 (note -> FRACTIONAL_DURATION PITCH OCTAVE .)
    WHOLE_DURATION  reduce using rule 3 (note -> FRACTIONAL_DURATION PITCH OCTAVE .)
    $end            reduce using rule 3 (note -> FRACTIONAL_DURATION PITCH OCTAVE .)


state 9

    (4) note -> WHOLE_DURATION PITCH OCTAVE .

    FRACTIONAL_DURATION reduce using rule 4 (note -> WHOLE_DURATION PITCH OCTAVE .)
    WHOLE_DURATION  reduce using rule 4 (note -> WHOLE_DURATION PITCH OCTAVE .)
    $end            reduce using rule 4 (note -> WHOLE_DURATION PITCH OCTAVE .)

